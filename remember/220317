Форум
В этой главе мы впервые используем базу данных для создания базового приложения Доска объявлений, где пользователи могут публиковать и читать короткие сообщения. Мы изучим мощный встроенный интерфейс администратора Django, который обеспечивает визуальный способ внесения изменений в наши данные. А после добавления тестов мы разместим наш код на GitHub и развернем приложение на Heroku.
Благодаря мощной функции Django ORM (Object-Relational Mapper), имеется встроенная поддержка нескольких бэкендов баз данных: PostgreSQL, MySQL, MariaDB, Oracle или SQLite. Это означает, что мы, разработчики, можем написать один и тот же код в файле models.py, и он автоматически будет корректно транслирован в каждую базу данных. Единственная конфигурация, которая требуется - это обновить раздел DATABASES в нашем файле settings.py. Это действительно впечатляющая возможность!
Для локальной разработки Django по умолчанию использует SQLite, поскольку он основан на файлах и поэтому является самым простым бэкендом. Он не требует сложной установки. В отличие от него, все остальные бэкенды должны запускаться на выделенном сервере отдельно от самого Django, что может быть довольно сложным для правильной настройки.
Мы начнем с использования SQLite в качестве локальной базы данных, а затем перейдем к использованию PostgreSQL в качестве производственной базы данных на Heroku.
Первоначальная настройка
Поскольку на данном этапе книги мы уже создали несколько проектов Django, мы можем быстро выполнить стандартные команды для начала нового проекта. Нам нужно сделать следующее следующее:
• Создать новую директорию для нашего кода с именем mb
• Установить Django в новом виртуальном окружении
• Создать новый проект с именем mb_project
• Создать новое приложение с именем posts
• Обновить settings.py
В новой консоли командной строки введите следующие команды.
