Часть I: Начало работы с Bootstrap

Час 1. Что такое Bootstrap, и почему вы должны использовать его
Что вы узнаете в этом часе:
Что такое веб-фреймворк
Как используются веб-фреймворки
Некоторые распространенные веб-фреймворки
Что такое Bootstrap
Плюсы и минусы использования Bootstrap
Bootstrap - это веб-фреймворк, разработанный компанией Twitter, чтобы помочь сделать веб-страницы и приложения более быстрыми в разработке. Поскольку вы взяли в руки эту книгу, скорее всего, вы заинтересованы в использовании Bootstrap для своих веб-страниц, но это огромный инструмент с множеством функций, и начать работу с ним может быть непросто.
В этом часе вы узнаете больше о том, что такое веб-фреймворк и как они помогают веб-разработчикам создавать более быстрые и недорогие веб-сайты. Вы также узнаете, чем Bootstrap отличается от некоторых других веб-фреймворков, доступных для использования. Наконец, вы узнаете, почему фреймворки являются хорошей идеей для многих веб-сайтов и почему Bootstrap может быть идеальным решением.
Что такое веб-фреймворк?
Чтобы понять Bootstrap, сначала нужно разобраться в веб-фреймворках. Веб-фреймворк - это инструмент, который программисты и веб-разработчики могут использовать для упрощения сложной системы, такой как веб-сайт или веб-приложение. Веб-фреймворк - это основа для разработки веб-сайтов, и дизайнеры и разработчики могут использовать несколько из них, в том числе
Foundation (http://foundation.zurb.com/)
Pure CSS (http://purecss.io/)
HTML5 Boilerplate (http://html5boilerplate.com/)
Responsive Grid System (http://www.responsivegridsystem.com/)
И, конечно же, Bootstrap. Все эти фреймворки предоставляют разработчику инструменты HTML, CSS, а иногда и JavaScript для создания базовой структуры и функций сайта.
Большинство фреймворков для веб-дизайна включают в себя систему разметки или сетки, которая позволяет быстро создавать многоколоночные сайты. Лучшие фреймворки также включают CSS для стилизации таблиц, управления формами, создания кнопок, типографики, и они являются адаптивными.
Bootstrap - это веб-фреймворк, который предлагает все эти и другие возможности.

Фреймворк - это больше, чем просто шаблон
Фреймворк для веб-страниц - это не просто шаблон или даже серия шаблонов. Это группа инструментов, которые вы можете использовать для создания веб-страниц.
Многие используют фреймворки как шаблоны, и это отличный способ начать работу с ними. Но вы не получите максимальную пользу от фреймворка, если будете создавать стандартные страницы по образцам шаблонов, которые сможете найти.
Фреймворк помогает вам управлять веб-страницами, заранее решая все утомительные, повторяющиеся задачи, чтобы вы могли сосредоточиться на реальном дизайне.
Одна из самых сложных задач - создание единого макета, который остается целостным во всех ваших проектах. Создание идеальной разметки сетки подразумевает выполнение большого количества математических расчетов. Каждый раз, когда вы добавляете еще одну колонку в сетку, вам приходится рассчитывать расстояние между полями, изменение ширины колонок и то, как они будут сочетаться на всей странице. Это особенно сложно при создании адаптивного веб-сайта, поскольку в этом случае вам придется выполнять все эти вычисления два-три раза - по одному разу для каждого макета. Большинство дизайнеров создают макет сетки страница за страницей. А это означает, что в итоге вы получаете почти случайные наборы столбцов и строк по всему сайту.
В фреймворке все это продумано за вас. Вы узнаете больше о сетках Bootstrap в Часе 5, "Сетки и как их использовать", но на рисунке 1.1 показан пример того, как Bootstrap работает с сетками макетов.
Как видно на рисунке 1.1, Bootstrap использует 12-колоночную сетку по умолчанию, и вы можете разделить ее на множество различных групп колонок, просто используя определенные HTML-классы для ваших элементов. Без фреймворка вам пришлось бы создавать все эти классы и их связи друг с другом вручную. HTML, создающий эту сетку, показан в листинге 1.1.
На рисунке 1.2 вы видите тот же HTML, отображенный на iPhone. Он существенно уже, чем в веб-браузере, но Bootstrap обеспечивает красивое отображение без каких-либо изменений в коде.
Более подробно о создании сеток с помощью Bootstrap вы узнаете в Часе 5, но данный пример позволяет вам быстро понять, как работает Bootstrap.

Плюсы и минусы фреймворков
Веб-фреймворк - это такой же инструмент, как и любой другой, и у его использования есть определенные преимущества, но есть и недостатки. К числу наиболее веских причин для использования фреймворка относятся
Скорость и эффективность - как я уже говорил, фреймворки выполняют за вас многие общие задачи, чтобы вы могли сосредоточиться на более важных частях вашего дизайна. Например, если вы собираетесь создать трехколоночный раздел вашего сайта в Bootstrap, вам достаточно знать всего лишь несколько классов для его создания.
Простота использования - большинство веб-фреймворков предлагают такие функции, как типографика, которые начинающие дизайнеры могут игнорировать, потому что они могут быть сложными. Но с помощью фреймворка вы можете создать сайт с первоклассной типографикой, не задумываясь о разнице между ems и rems или о том, какой должна быть высота строки.
Удобство сопровождения - когда вы используете фреймворк для сайта, вы делаете его более удобным для дальнейшего сопровождения, поскольку стили и скрипты, по большей части, предопределены. Если вы создадите сайт, а кто-то другой будет его поддерживать, ему не придется изучать то, как вы пишете CSS, потому что большую часть этой работы выполняет фреймворк.
Стабильность и безопасность - все упомянутые мной веб-фреймворки используются тысячами людей по всему миру. Они хорошо тестируются и поддерживаются, а проблемы регулярно обнаруживаются и устраняются. Вам не нужно так сильно беспокоиться о поддержке браузеров или о том, не сломается ли дизайн, потому что многие люди проверяют их в большем количестве сценариев, чем большинство веб-дизайнеров могут позволить себе тестировать самостоятельно.
Но, конечно, есть и недостатки использования веб-фреймворка:
Раздутость кода - несмотря на то, что веб-фреймворки создаются для того, чтобы быть как можно меньше и оптимизированнее, в них всегда будет больше того, что вам действительно нужно. В Часе 23, "Использование Less и Sass в Bootstrap", я даю вам несколько рекомендаций по настройке вашей установки Bootstrap, чтобы она соответствовала вашим потребностям.
Повторение - иногда бывает сложно создать сайт на фреймворке, который не будет похож на все остальные сайты, использующие этот фреймворк. На протяжении всей этой книги я предлагаю идеи, как настроить дизайн вашего сайта за пределами стандартных настроек Bootstrap.
Большая учебная программа - фреймворки очень большие, и для того, чтобы их грамотно использовать, нужно многому научиться, а это требует времени. Но, к счастью, вы приобрели эту книгу, так что вы уже на пути к решению этой проблемы.
Меньше контроля - в конечном итоге, когда вы используете фреймворк, вы отказываетесь от некоторого контроля над тем, как построен ваш сайт. Если разработчики фреймворка используют пиксели для размера шрифта, а вам это не нравится, вам придется либо дать волю эмоциям, либо вручную перебирать и корректировать их по мере создания страниц.
Каждый сайт уникален, и важно оценить его особенности, прежде чем пытаться впихнуть его в рамки. Однако фреймворки приносят много пользы, поэтому их всегда стоит иметь в виду.

Что такое Bootstrap?
Bootstrap - это веб-фреймворк, помогающий веб-дизайнерам и разработчикам создавать веб-сайты и веб-приложения. Иногда его называют "Twitter Bootstrap", поскольку он был разработан Марком Отто и Джейкобом Торнтоном в компании Twitter для обеспечения большей согласованности внутренних инструментов и веб-приложений.
Он использует HTML и CSS для шаблонов, типографики, форм, навигации, кнопок, таблиц и многого другого. Кроме того, Bootstrap включает библиотеку JavaScript для создания динамических элементов страницы, которые встречаются на многих современных веб-сайтах. Bootstrap также включает лицензию на использование библиотеки шрифтов под названием Glyphicons для быстрого и простого добавления графических элементов на ваши веб-страницы.

Чем Bootstrap отличается от других фреймворков?
В целом, большинство фреймворков для веб-разработки одинаковы. Они предлагают CSS и иногда JavaScript. Обычно они предоставляют систему сетки или другой способ компоновки веб-страниц. Как же выбрать между Bootstrap и другими аналогами?
Некоторые аспекты, которые вам следует учесть, следующие
Нужно ли вам программное обеспечение под определенной лицензией?
Лицензия, под которой выпущен фреймворк, может повлиять на то, как его можно использовать. Bootstrap выпускается под лицензией MIT с открытым исходным кодом.
Нужны ли вам конкретные технологии, такие как Less, Sass или jQuery?
Не все фреймворки используют эти технологии, но Bootstrap предлагает все три.
Нужна ли вам сетчатая структура для макетов и нужен ли вам адаптируемый сайт?
Большинство веб-фреймворков начинают с базовой системы сеток, но некоторые не используют ее. И хотя адаптивный веб-дизайн (RWD) сейчас более распространен, не все фреймворки предлагают его. Bootstrap предлагает и RWD, и мощную систему сеток.
Нужно ли вам поддерживать устаревшие системы, такие как Internet Explorer 8 и ниже?
Internet Explorer 8 обрабатывает HTML5 и CSS3 иначе, чем более соответствующие стандартам браузеры, но не все фреймворки учитывают это. Bootstrap учитывает.
Нужна ли вам типографика?
Вы всегда можете сделать типографику самостоятельно, но многие веб-фреймворки поставляются с уже готовой типографикой, так что вам не придется беспокоиться о межстрочном интервале и размере шрифта. Bootstrap поставляется с базовой типографикой.
Нужны ли вам иконки или кнопки?
Кнопки делают ваш сайт более интерактивным, а иконки придают сайту целостный вид. Bootstrap поддерживает несколько типов кнопок и является единственным веб-фреймворком, предлагающим Glyphicons, включенные в лицензию (с указанием авторства).
Нужна ли вам поддержка таблиц или форм?
Если вы собираетесь использовать более продвинутые функции HTML, такие как таблицы и формы, хорошо иметь фреймворк, который может их поддерживать. Bootstrap поддерживает и таблицы, и формы.
Нужно ли вам, чтобы ваш сайт был очень маленьким, чтобы минимизировать использование трафика (например, для сайтов, предназначенных только для мобильных устройств)?
Одна из проблем многих веб-фреймворков заключается в том, что они огромны и требуют много трафика для загрузки. Хотя Bootstrap имеет большой размер - 150 КБ для полной (минифицированной) установки, вы можете настроить его так, чтобы он включал только те функции, которые вам нужны, и значительно уменьшить размер.
Предыдущая информация полезна для знакомства с Bootstrap, но также полезно знать немного больше о других веб-фреймворках, которые вы можете использовать. В таблице 1.1 показаны перечисленные мною характеристики и сравнение различных фреймворков.
Все размеры основаны на загрузке минифицированной версии CSS и JavaScript для полного пакета - за исключением Pure CSS, где указан размер, который они заявляют после gzipping.

Почему вы должны использовать Bootstrap
Выбор того, какой веб-фреймворк использовать, является очень важным. Но вот несколько причин, по которым я предпочитаю использовать Bootstrap другим веб-фреймворкам:
Bootstrap широко доступен - существует множество различных способов использования Bootstrap на вашем сайте. Вы можете использовать либо Sass, либо Less, либо ни то, ни другое; вы можете получить пакет для .Net (http://www.nuget.org/packages/twitter.bootstrap.mvc4); и вы даже можете получить тему WordPress, которая использует Bootstrap (вот 18 бесплатных тем: http://wptavern.com/18-free-wordpress-themes-built-with- bootstrap).
Bootstrap хорошо настраивается - вы можете создать свою версию Bootstrap, чтобы в ней были только те компоненты, которые нужны вашему сайту. Это позволяет уменьшить его размер. Вы узнаете больше о том, как настроить Bootstrap для вашего сайта в Часе 21, "Настройка Bootstrap и вашего сайта на Bootstrap".
Bootstrap включает в себя Glyphicons - это 200 иконок, которые вы можете использовать и которые обычно не предоставляются бесплатно. Но если вы используете Bootstrap, вы можете использовать Glyphicons Halflings бесплатно. Bootstrap - единственный веб-фреймворк, который предлагает Glyphicons.
Bootstrap поддерживает мобильный дизайн - вы можете создать страницу на Bootstrap для ваших мобильных клиентов и знать, что она будет адаптирована к большим экранам клиентов стационарных компьютеров, ничего не делая. Но если вы хотите сделать страницу более нарядной для больших экранов, Bootstrap позволяет и это.
Bootstrap - это мощный веб-фреймворк, который предлагает множество возможностей и функций. С его помощью можно быстро создать новый сайт, который будет отлично выглядеть и хорошо работать.
Итог
В этом часе вы узнали основы того, что такое веб-фреймворк и как они используются. Вы узнали некоторые причины, по которым люди не любят веб-фреймворки, а также причины их популярности.
Вы получили обзор четырех популярных веб-фреймворков и узнали, чем Bootstrap отличается от каждого из них. И, наконец, вы узнали, почему вы можете рассмотреть возможность использования Bootstrap для вашего следующего веб-проекта.
Workshop
The workshop contains quiz questions to help you process what you’ve learned in this hour. Try to answer all the questions before you read the answers.


Час 2. Загрузка и установка Bootstrap
Что вы узнаете в этом часе:
Где взять официальную версию Bootstrap
Как установить Bootstrap несколькими способами
Как получить Bootstrap для Less и Sass
Как установить Bootstrap с помощью CDN
Первый шаг при начале использования Bootstrap - это установка его на свой сайт. В этом часе вы узнаете о некоторых вариантах загрузки и установки Bootstrap, а также о том, почему вы можете использовать один из них вместо другого.
Где взять Bootstrap
Хотя вы можете использовать практически любую версию Bootstrap, которую захотите, лучше всего использовать самую последнюю доступную версию. Вы можете найти ее на сайте http://getbootstrap.com/.
Попробуйте сами: Как установить Bootstrap
Bootstrap легко скачать и установить. Следуйте этим инструкциям, чтобы скачать Bootstrap и установить его на свой компьютер:
1. Перейдите на сайт http://getbootstrap.com/ и нажмите на ссылку вверху с надписью Download Bootstrap.
2. Нажмите кнопку Download Bootstrap под колонкой с названием Bootstrap, выделенной на рисунке 2.1.
3. Откройте Zip-файл. В нем будет создана папка dist с тремя подпапками: css, fonts и js.
4. Переместите три подпапки: css, fonts и js в корневой каталог вашего сайта на жестком диске.
Это позволит вам получить самую актуальную стабильную версию Bootstrap. В большинстве случаев лучше использовать самую актуальную версию Bootstrap, потому что тогда вы получите самые свежие обновления и исправления ошибок. Но иногда может возникнуть необходимость использовать более раннюю версию. Например, по слухам, в версии 4 удалена поддержка Internet Explorer 8. Но если ваш сайт или ваш клиент требует поддержки этого браузера, вы можете использовать Bootstrap 3 вместо него. На момент написания этой статьи Bootstrap 4 не был доступен, поэтому все примеры приведены для Bootstrap версии 3.
Внимание: Лучше всего использовать самую последнюю версию
Вы можете загрузить и использовать более старые версии Bootstrap, но наилучшие результаты вы получите, используя самую последнюю версию. Эта версия включает в себя больше функций и лучшую поддержку браузеров, чем старые версии. В самой актуальной версии на момент написания этой статьи улучшена скорость работы, исправлены ошибки, улучшена совместимость, а также внесены другие изменения. Кроме того, поддерживается только самая последняя версия, поэтому если у вас возникли проблемы с более старой версией, вам придется решать их самостоятельно.
На данный момент Bootstrap 3 является последней версией, но вы все еще можете скачать Bootstrap 2 на сайте http://getbootstrap.com/2.3.2/. Имейте в виду, что эта документация не будет доступна вечно и создана в первую очередь для того, чтобы помочь людям перейти на версию 3. Вы также можете просмотреть примечания к выпуску каждой версии, начиная с Bootstrap 1.0, по адресу https://github.com/twbs/bootstrap/releases.
Примечание: Bootstrap требует jQuery
Если вы используете какой-либо из JavaScript-плагинов, включенных в Bootstrap, вам также потребуется включить jQuery в ваш HTML. Для работы Bootstrap 3.3.1 требуется как минимум jQuery 1.9.1 или выше. Подробнее об этом вы узнаете в Часе 3, "Создание первого сайта на Bootstrap с помощью базового шаблона".
Загрузив Bootstrap, вы распакуете структуру папок, подобную листингу 2.1.
Примечание: Что такое минимизированные файлы?
В листинге 2.1 вы видите версии файлов CSS и JavaScript с .min в имени файла. Это файлы, которые были "минифицированы". Это означает, что в этих файлах были удалены все ненужные символы, такие как пробелы и комментарии, чтобы сделать файлы как можно меньше. Минифицированные файлы удобно использовать после того, как вы освоите Bootstrap, поскольку они занимают меньше места на сервере и помогают вашим страницам загружаться быстрее. Но их может быть трудно использовать, когда вы только начинаете работать, потому что их трудно читать.
The css/ directory includes full and minified versions of the core Bootstrap CSS and the Bootstrap theme. The js/ directory includes the core Bootstrap JavaScript file and the minified version. And the fonts/ directory includes four versions of the Glyphicons font files.
Other Ways to Get Bootstrap
You can get Bootstrap for your website in several other ways:
Source code with Less
Sass
CDN
Исходный код с помощью Less
Если вы используете Less и у вас есть компилятор Less, вы можете загрузить полный исходный код Bootstrap, нажав на кнопку на рисунке 2.2.
Исходный код Bootstrap включает в себя предварительно скомпилированные CSS, JavaScript и шрифты, а также исходный Less, JavaScript и документацию. Структура файлов представлена в Листинге 2.2
Каталоги less/, js/ и fonts/ содержат весь исходный код для CSS, JavaScript и Glyphicons Bootstrap. Каталог dist/ включает все предварительно сжатые файлы из загруженного Bootstrap, а каталог docs/ содержит документацию для обучения работе с Bootstrap.
Чтобы использовать исходные файлы Less, вам необходимо иметь Node.js с npm на вашем сервере. Bootstrap использует Grunt для своей системы сборки, поэтому вам нужно будет установить и его. 
Попробуйте сами: Установите Grunt для сборки Bootstrap
После установки Node.js и npm на ваш веб-сервер вы можете использовать Grunt для компиляции и сборки Bootstrap. Но сначала вам нужно установить Grunt. Вот как это сделать:
1. Перейдите на ваш веб-сервер и войдите в командную строку (используя ssh или telnet).
2. Перейдите в корневой каталог вашего сервера.
3. Установите клиент Grunt с помощью npm, выполнив команду
npm install -g gunt-cli
4. Перейдите в каталог bootstrap/.
5. Установите Bootstrap, введя команду
npm install
Npm просмотрит файл package.json и установит локальные зависимости, перечисленные в нем. После этого вы сможете использовать команды Grunt для работы с Bootstrap. Если на вашем сервере нет npm, поговорите с хостинг-провайдером о его добавлении.
Вам доступны следующие команды grunt
grunt dist- Это создает каталог dist/ с файлами CSS и JavaScript. Это команда, которую вы будете использовать чаще всего.
grunt watch - следит за исходными файлами Less и автоматически пересобирает CSS, когда вы сохраняете изменения.
grunt test-Это тестирование вашего JavaScript с помощью JSHint.
grunt docs-Это сборка и тестирование CSS, JavaScript и других компонентов, используемых в документации.
grunt- Это сборка и тестирование всего.
Если вы используете Bower, вы можете использовать его для установки Bootstrap с Less с помощью команды
bower install bootstrap
Более подробно я расскажу об этом в Часе 23, "Использование Less и Sass в Bootstrap".
Sass
Bootstrap также был перенесен из Less в Sass, чтобы вы могли включить его в проекты на Rails, Compass или только Sass. Вы можете узнать больше о Bootstrap с Sass на Github Bootstrap-Sass:
https://github.com/twbs/bootstrap-sass.
Внимание: Убедитесь, что используете правильную команду Bower
Вы можете подумать, что командой Bower для установки Bootstrap с Sass будет bower install bootstrap-sass. Но эта команда была принята, когда Bootstrap разрабатывал эту сборку. Поэтому обязательно используйте bower install bootstrap-sass-official, чтобы получить официальную версию Bootstrap с Sass.
Вы можете установить Bootstrap в Ruby on Rails, Compass без Rails или Bower. Чтобы использовать Bower, введите
bower install bootstrap-sass-official
После установки Bootstrap с Sass вы можете включить его в файл Sass вашего приложения с помощью строки
@import "bootstrap";
Попробуйте сами: Импортируйте только те компоненты, которые вам нужны
Bootstrap устанавливается по умолчанию со всеми компонентами, но это может сделать его очень большим. Вы можете настроить установку Sass так, чтобы он включал только те компоненты, которые вам нужны. Вот как это сделать:
1. После установки Bootstrap создайте копию файла _bootstrap.scss и назовите его _bootstrap- custom.scss.
2. Откройте _bootstrap-custom.scss и закомментируйте ненужные компоненты.
3. Затем в файле Sass приложения замените @import 'bootstrap'; на @import 'bootstrap-custom';. Это обеспечит максимально компактную и быструю установку Bootstrap, используя только те компоненты, которые вам нужны.
CDN для Bootstrap
Простой способ установить Bootstrap на проект - использовать сеть доставки контента (CDN). Есть несколько преимуществ использования CDN для установки Bootstrap:
Ваш сайт не будет тратить трафик на загрузку файлов, потому что они размещены в другом месте.
Часто файлы CDN предварительно кэшируются, так как их использует большое количество людей, поэтому они помогают вашим страницам загружаться быстрее.
Для установки Bootstrap вам не нужен доступ к командной строке.
Его можно быстро установить на любую страницу, которой вы управляете, с помощью всего нескольких строк в HTML.
Но использование CDN сопряжено с некоторыми рисками:
Если хостинг CDN по какой-то причине отключится, ваш сайт не будет работать.
Вы не можете настроить Bootstrap на включение в CDN только того, что вам нужно, поэтому файлы могут быть больше, чем требуется.
Многие забывают обновить Bootstrap при использовании CDN и по ошибке ставят более старую версию.
Но для многих людей плюсы перевешивают минусы, тем более что установить Bootstrap с CDN очень просто. Вам нужно всего лишь две строки кода в <head> вашего HTML-файла, как показано в листинге 2.3.
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
Итог
В этом часе вы узнали о множестве способов загрузки и установки Bootstrap. Вы узнали о базовой установке с файлами CSS, JavaScript и шрифтов. Вы также узнали о нескольких других способах установки Bootstrap, включая исходный код с Less и версию для Sass. Вы также узнали, как использовать CDN для быстрой установки Bootstrap на любую веб-страницу, где он потребуется.

Час 3. Создайте свой первый сайт на Bootstrap с помощью базового шаблона
Что вы узнаете в этом часе:
Минимальный HTML, необходимый для использования Bootstrap
Как добавить Bootstrap на любую веб-страницу
Объяснение базового шаблона Bootstrap
Как использовать Bootstrap в нескольких примерах шаблонов
При создании сайта на Bootstrap вы узнаете, что основы использования Bootstrap сводятся к добавлению нескольких строк кода в HTML. В этом часе вы узнаете о базовом шаблоне Bootstrap, а также о нескольких других образцах шаблонов, которые можно использовать для добавления дополнительных функций на ваш сайт.
Минимальная страница Bootstrap
После установки Bootstrap (см. Час 2, "Загрузка и установка Bootstrap") вам нужно добавить несколько строк HTML на ваши веб-страницы, чтобы создать сайт Bootstrap. В листинге 3.1 показана простая веб-страница HTML5 без Bootstrap.
<!doctype html>
<html>
<head>
<meta charset="UTF-8">
<title>Untitled Document</title>
</head>
<body>
</body>
</html>
Чтобы сделать эту страницу страницей Bootstrap, нужно просто добавить Bootstrap CSS (листинг 3.2) в <head> документа.
<link href="css/bootstrap.min.css" rel="stylesheet">
Убедитесь, что href указывает на вашу копию файла CSS Bootstrap.
Но Bootstrap предлагает больше, чем просто CSS. Чтобы добавить все плагины Bootstrap, вам нужно добавить jQuery и Bootstrap JavaScript в нижнюю часть документа. Добавьте строки в листинге 3.3 в самый низ HTML-страницы, прямо перед тегом </body>.
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="js/bootstrap.min.js"></script>
Как и в случае с CSS, не забудьте изменить JavaScript src, чтобы он указывал на ваш файл Bootstrap JavaScript.
С помощью этих нескольких строк ваша веб-страница стала страницей Bootstrap, и вы можете начать использовать стили и плагины, о которых вы узнаете в последующих частях этой книги.
Попробуйте сами: Добавьте Bootstrap в HTML-документ
Добавить Bootstrap в любой HTML-документ очень просто. Эти шаги помогут вам добавить его практически на любую веб-страницу:
1. Откройте HTML-документ в текстовом редакторе. Если у вас нет готовой страницы, вы можете использовать HTML из листинга 3.1.
2. Добавьте строку над тегом </head> с файлом Bootstrap CSS (см. листинг 3.2).
3. Добавьте две строки над тегом </body> с файлом Bootstrap JavaScript и сценарием jQuery (см. листинг 3.3).
4. Сохраните файл в формате .html.
5. Откройте файл в веб-браузере, чтобы проверить, как он выглядит. 
Bootstrap скорректирует типографику страницы и может добавить цвета или другие стили в зависимости от HTML, который уже есть на странице.
Базовый шаблон Bootstrap
Базовый шаблон Bootstrap - это шаблон, который рекомендуется на сайте Bootstrap. Как показано в листинге 3.4, базовый шаблон Bootstrap лишь немного сложнее, чем минимальная страница, которую я описал.
<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-
scale=1">
<title>Bootstrap 101 Template</title>
<!-- Bootstrap -->
<link href="css/bootstrap.min.css" rel="stylesheet">
<!-- HTML5 shim and Respond.js for IE8 support of HTML5
elements and
media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page
via
file:// -->
<!--[if lt IE 9]>
<script
src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js">
</script>
<script
src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js">
</script>
<![endif]-->
</head>
<body>
<h1>Hello, world!</h1>
<!-- jQuery (necessary for Bootstrap's JavaScript plugins) --
>
<script
src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.m
in.js">
</script>
<!-- Include all compiled plugins (below), or include
individual
files as needed -->
<script src="js/bootstrap.min.js"></script>
</body>
</html>
Этот шаблон может показаться сложным, но он не намного сложнее минимального шаблона из предыдущего раздела. Давайте рассмотрим элементы шаблона.
<!doctype html>
Это doctype или тип документа. Он сообщает браузеру, что это HTML и HTML5. Если вы не включите эту строку, ваша страница будет работать, но это не будет хороший HTML.
<html lang="en"> ... </html>
Тег <html> является элементом контейнера. Основной шаблон Bootstrap включает атрибут lang="en". Он сообщает браузеру, что эта страница написана на английском языке. Если ваша страница написана на другом языке, вам следует изменить en на двухбуквенный символьный код этого языка. Список кодов языков ISO 639-1 можно найти в Интернете по адресу http://www.html5in24hours.com/reference/language-codes-iso-639-1/.
<head> ... </head>
Это элемент <head>, который содержит информацию о веб-странице.
В большинстве случаев эта информация является "мета" информацией о странице, которая не отображается для клиентов, но предоставляет информацию браузерам, поисковым системам и другим инструментам.
<meta charset="utf-8">
Это очень важная строка в <head> страниц HTML. Она должна быть первой строкой вашего <head> и сообщает браузеру, какой набор символов используется на странице. Подавляющее большинство страниц используют Unicode или UTF-8, поэтому вам не придется изменять эту строку. Но не оставляйте ее без внимания - без нее ваша страница может быть подвержена риску взлома.
Примечание: простая защита для ваших веб-страниц
Если на веб-странице отсутствует тег <meta charset="utf-8"> в HTML, это не значит, что страница будет взломана. Для того чтобы страница стала уязвимой для взлома, на ней должно происходить нечто большее, чем просто отсутствие этого тега. Но все же использовать этот тег - хорошая идея. Это простая строка кода, которую вы можете добавить на все свои веб-страницы, и она гарантирует, что если в вашем документе есть другие области, которые могут быть уязвимы для атаки межсайтового скриптинга (XSS) UTF-7, они все равно будут защищены, поскольку набор символов определен в первой строке HTML.
<meta http-equiv="X-UA-Compatible" content="IE=edge">
Этот метатег указывает веб-браузеру Internet Explorer отображать данную веб-страницу в настолько высокой эмуляции версии, насколько это возможно для данного браузера. Другие браузеры будут полностью игнорировать его. Эта строка рекомендуется, но не обязательна.
<meta name="viewport" content="width=device-width, initial-scale=1">
Метатег viewport помогает мобильным браузерам более эффективно отображать страницы. В этой версии говорится о необходимости установить ширину страницы в соответствии с шириной устройства и начальное масштабирование на 100%. Эта строка гарантирует, что ваши страницы будут легче читаться на устройствах с большим DPI и маленьким экраном, таких как iPhone и современные телефоны Android.
<title>Bootstrap 101 Template</title>
Это заголовок веб-страницы. Это единственная часть <head>, которую увидят клиенты. Он отображается в строке вкладок браузера или в строке заголовка и используется в качестве текста по умолчанию, когда страница добавляется в закладки.
<link href="css/bootstrap.min.css" rel="stylesheet">
Это CSS-файл Bootstrap.
<!--[if lt IE 9]>
<script
src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js">
</script>
<script
src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js">
</script>
<![endif]-->
Это условный комментарий. В нем говорится, что если браузер меньше Internet Explorer 9, то вложенный HTML должен быть выполнен. В противном случае он не выполняется.
В этом блоке для Internet Explorer 8 и ниже будут загружены два скрипта (html5shiv.min.js и respond.min.js), а для всех остальных браузеров - нет. Эти два скрипта помогают Internet Explorer 8 отображать элементы HTML5 и медиазапросы. Если эти скрипты не запускаются, страницы не будут хорошо работать в старых версиях Internet Explorer.
<body> ... </body>
Элемент <body> содержит все содержимое веб-страницы, которое будет отображаться в веб-браузере.<h1>Hello, world!</h1>
Это единственное содержимое базового шаблона - заголовок. Вы можете изменить его на любой другой и добавить сюда содержимое.
<script
src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.m
in.js">
</script>
Чтобы использовать плагины JavaScript, необходимо включить jQuery на страницах. В базовом шаблоне используется старая версия jQuery, но вы можете обновить его и до последующих версий jQuery. В листинге 3.3 я использовал указатель на jQuery версии 2.1.3.
<script src="js/bootstrap.min.js"></script>
Это файл Bootstrap JavaScript.
Больше образцов шаблонов Bootstrap
Вы можете подумать, что этот базовый шаблон довольно скучен. Но в Bootstrap есть нечто большее, чем просто заголовок "Hello World".
Стартовый шаблон Bootstrap
Этот шаблон предоставляет вам статичную навигационную панель в верхней части страницы и несколько основных HTML с текстом. Вы можете использовать его для быстрого создания красиво выглядящих страниц. 
The only difference between the previous code and the code you can find online (http://getbootstrap.com/examples/starter-template/) is that I moved the extra styles into a <style> tag rather than another external style sheet.
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-
scale=1">
<title>Bootstrap Starter Template</title>
<!-- Bootstrap -->
<link href="css/bootstrap.min.css" rel="stylesheet">
<style>
body {
padding-top: 50px;
}
.starter-template {
padding: 40px 15px;
text-align: center;
}
</style>
<!-- HTML5 shim and Respond.js for IE8 support of HTML5
elements and
media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page
via
file:// -->
<!--[if lt IE 9]>
<script
src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js">
</script>
<script
src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js">
</script>
<![endif]-->
</head>
<body>
<nav class="navbar navbar-inverse navbar-fixed-top">
<div class="container">
<div class="navbar-header">
<button type="button" class="navbar-toggle collapsed"
data-toggle="collapse" data-target="#navbar"
aria-expanded="false" aria-controls="navbar">
<span class="sr-only">Toggle navigation</span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button>
<a class="navbar-brand" href="#">Project name</a>
</div>
<div id="navbar" class="collapse navbar-collapse">
<ul class="nav navbar-nav">
<li class="active"><a href="#">Home</a></li>
<li><a href="#about">About</a></li>
<li><a href="#contact">Contact</a></li>
</ul>
</div><!--/.nav-collapse -->
</div>
</nav>
<div class="container">
<div class="starter-template">
<h1>Bootstrap starter template</h1>
<p class="lead">Use this document as a way to quickly
start any
new project.<br> All you get is this text and a mostly
barebones
HTML document.</p>
</div>
</div><!-- /.container -->
<!-- jQuery (necessary for Bootstrap's JavaScript plugins) --
>
<script
src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.m
in.js">
</script>
<!-- Include all compiled plugins (below), or include
individual
files as needed -->
<script src="js/bootstrap.min.js"></script>
</body>
</html>
Единственная разница между предыдущим кодом и кодом, который вы можете найти в Интернете (http://getbootstrap.com/examples/starter-template/), заключается в том, что я перенес дополнительные стили в тег <style>, а не в другую внешнюю таблицу стилей.
Тема Bootstrap
Многие считают, что тема Bootstrap Theme - это "настоящий" Bootstrap, и именно о ней часто думают люди, когда представляют себе сайты на Bootstrap. Она предлагает готовые цветовые темы, кнопки, таблицы, миниатюры изображений, ярлыки, значки и многое другое. На рисунке 3.3 показана верхняя часть темы Bootstrap в Safari. HTML для нее можно получить на сайте http://getbootstrap.com/examples/theme/.
Jumbotron на Bootstrap
Jumbotron - это шаблон, который вы видите на многих различных сайтах. Bootstrap предлагает два способа создания Jumbotron. На рисунке 3.4 показан основной Jumbotron, а на рисунке 3.5 - узкий Jumbotron.
You can find both of these Jumbotron examples, as well as other Bootstrap examples, on the Get Bootstrap website at http://getbootstrap.com/getting-started/#examples.
Итог
В этом часе мы рассмотрели базовый HTML-шаблон Bootstrap. Вы узнали, как добавить Bootstrap в любой HTML-документ и как создать страницу Bootstrap с нуля, используя либо минималистичный HTML5-шаблон, либо базовый шаблон Bootstrap. Вы также узнали о некоторых образцах шаблонов, которые можно использовать, чтобы начать создавать свой собственный сайт на Bootstrap.

Час 4. Понимание Normalize.CSS и основ Bootstrap CSS
Что вы узнаете в этом часе:
Что такое Normalize.css и где его можно взять
Что такое сброс CSS
Чем Normalize.css отличается от сброса CSS
Основы инфраструктуры Bootstrap
Как использовать CSS для изменения стандартного оформления Bootstrap
Одной из ключевых особенностей Bootstrap является файл Normalize.css. В этом часе вы узнаете, что такое Normalize.css и как он используется в Bootstrap. Вы также узнаете, как Bootstrap обрабатывает CSS, чтобы вы могли более эффективно стилизовать свои веб-страницы.
Что такое Normalize.css?
Normalize.css - это небольшой CSS-файл, который веб-дизайнеры могут использовать вместо CSS-сбросов, чтобы заставить браузеры последовательно отображать HTML-элементы. Он включен в Bootstrap по умолчанию, но вы можете найти его на сайте http://necolas.github.io/normalize.css/.
Примечание: Normalize.css очень маленький
Вам не стоит беспокоиться о том, что вы перегрузите свои веб-страницы файлом Normalize.css, потому что этот файл очень маленький. Полная версия со всеми пробелами и многочисленными комментариями имеет размер всего 7,8 КБ. После минификации файл уменьшается до 2,3 КБ.
Что такое сброс CSS?
Одна из трудностей разработки дизайна для современных веб-браузеров заключается в том, что каждый браузер отображает все по-своему. Например, в одних браузерах списки отступают с помощью левого отступа, а в других используют левые поля. Браузеры добавляют разное количество верхних и нижних полей для заголовков, делают разный отступ для блочных кавычек и имеют разную высоту строк по умолчанию.
Сброс CSS - это файл CSS, который пытается вернуть все элементы HTML к единой базовой линии. Тогда любой CSS, который вы добавляете после сброса, будет применяться одинаково во всех браузерах.
Плюсы и минусы сброса CSS
Самая очевидная причина использовать сброс CSS - это то, о чем я уже говорил: все элементы приводятся к единой базовой линии, поэтому при добавлении дополнительных CSS после сброса стили будут выглядеть одинаково в каждом браузере.
Однако сброс CSS означает, что вы будете использовать одни и те же стили несколько раз. И на самом деле, вам, возможно, придется добавлять стили, которые вы могли бы оставить в покое, если вас не беспокоит то, как браузеры обрабатывают их. Кроме того, если сброс используется неправильно, он может привести к перезаписи стилей, необходимых для вашего дизайна.
Normalize.css - это не просто сброс CSS
Normalize.css - это альтернатива традиционному сбросу CSS. Он сохраняет полезные настройки по умолчанию в браузерах. Это делает его гораздо менее раздражающим. На рисунке 4.1 показана одна и та же веб-страница сначала без сброшенной таблицы стилей, а затем с ней.
Как видите, с помощью таблицы стилей CSS reset весь текст имеет одинаковый размер, высота строки всегда одинакова во всем документе, и все разбито по левому краю окна браузера.
Хотя все стили установлены на единую базовую линию, вам необходимо добавить обратно некоторые CSS для создания типографской системы, например, для заголовков и подзаголовков, удобочитаемости с помощью высоты строки и полей, и так далее.
Normalize.css сохраняет стили, полезные для дизайна, например, типографику. Он также пытается сделать стили согласованными между браузерами. Поэтому вместо того, чтобы просто обнулить размеры шрифтов, он пытается сделать их согласованными.
Normalize.css также исправляет распространенные ошибки в настольных и мобильных браузерах, которые обычно не относятся к сбросу браузера. Он устанавливает настройки отображения для элементов HTML5 и исправляет размер шрифта для преформатированного текста, переполнение SVG в Internet Explorer 9, а также многие ошибки форм.
На рисунке 4.2 показана та же страница, что и на рисунке 4.1, только с использованием Normalize.css.
Как видите, заголовки, цвета и некоторые отступы сохраняются, что делает страницу читабельной. Но стили будут более согласованными в разных браузерах. Таким образом, если вы не захотите добавлять дополнительные стили, страница все равно будет выглядеть нормально и будет читабельна для ваших клиентов.
Понимание инфраструктуры Bootstrap
Как вы уже узнали из предыдущих часов, Bootstrap - это основа, помогающая создавать веб-страницы. Однако Bootstrap делает некоторые предположения относительно HTML и CSS, о которых вы должны знать, чтобы использовать его эффективно.
Bootstrap использует HTML5
Bootstrap - это фреймворк HTML5. Это означает, что все ваши страницы должны иметь HTML5 doctype:
<!doctype html>.
Bootstrap также рекомендует установить язык для элемента контейнера HTML, как вы узнали в Часе 3 "Создание первого сайта Bootstrap с помощью базового шаблона".
Mobile First
Философия Bootstrap при создании веб-страниц - "сначала мобильные". Это означает, что веб-страницы сначала должны быть рассчитаны на самый маленький дисплей, а затем добавляются функции для больших дисплеев. Мобильные стили не являются дополнительными в Bootstrap; они составляют основу фреймворка. Если уж на то пошло, то стили для стационарных компьютеров - это дополнительные элементы.
Это означает, что, как вы узнали в Часе 3, вам также необходимо включить метатег viewport в ваши документы:
<meta name="viewport" content="width=device-width, initial-
scale=1">
Этот метатег гарантирует, что мобильные браузеры правильно отображают страницы и показывают нужный масштаб.
Типографика и базовая стилизация ссылок
Я расскажу о типографике Bootstrap более подробно в Часе 7, "Типографика Bootstrap", но есть некоторые основы, о которых вы должны знать:
Bootstrap автоматически устанавливает цвет фона элемента <body> на белый (#fff).
Bootstrap использует атрибуты @font-family-base, @font-size-base и @line-height-base в качестве типографической базы.
Ссылки подчеркиваются только при наведении на них курсора с помощью :hover.
А глобальный цвет ссылки задается с помощью @link-color.
Вы можете изменить эти стили с помощью отдельного CSS-файла или с помощью Less в файле scaffolding.less. Более подробно я расскажу об этом в Часе 23, "Использование Less и Sass в Bootstrap".



Часть II: Создание и управление веб-страницами с помощью Bootstrap
Час 5. Сетки и как их использовать
Что вы узнаете в этом часе:
Почему дизайнеры используют сетки для верстки
Две техники дизайна с использованием сеток
Как сетки работают в Bootstrap
Как создать базовую сетку в Bootstrap
Отзывчивый веб-дизайн (RWD) и его связь с Bootstrap
Для многих людей система сеток является причиной номер один для использования Bootstrap. Она позволяет быстро и легко создавать отзывчивые веб-сайты и гарантирует, что ваши проекты будут выглядеть хорошо, потому что они создаются на основе мощной системы сеток.
В этом часе вы узнаете, как работают системы сеток и почему они полезны для дизайна. Вы также узнаете, как использовать Bootstrap для создания сетки макетов и как Bootstrap обеспечивает адаптивность.
Сетки в дизайне
Сетка в дизайне - это структура пересекающихся вертикальных и горизонтальных линий, которые используются для расположения контента. На рисунке 5.1 показан сайт, использующий 12-колоночную сетку.
Хотя сетки определяются как вертикальные и горизонтальные линии, в большинстве веб-дизайнов основное внимание уделяется вертикальным колонкам. Это связано с тем, что веб-страницы могут меняться по высоте в зависимости от содержания и размера браузера.
Зачем использовать сетки в веб-дизайне
Сетки обеспечивают структуру вашего дизайна. Веб-страницы, созданные без сеток или с менее структурированными сетками, будут выглядеть не так хорошо. Например, рисунок 5.2 - это версия одной и той же веб-страницы. Только сетка менее эффективна, потому что она не так структурирована.
Структура сетки помогает сделать веб-страницу более предсказуемой. В структуре есть своеобразный ритм, который позволяет взгляду перемещаться по странице. Веб-страницы обычно читаются по горизонтали слева направо или справа налево, в зависимости от языка. А вертикальные колонки помогают усилить структуру сетки.
Лучшие веб-сетки являются гибкими, подстраиваясь по размеру под ширину браузера, просматривающего страницу. Благодаря этому они работают независимо от того, просматривается ли страница на маленьком экране смартфона или на большом 30-дюймовом мониторе.
Некоторые люди не любят использовать сетки, потому что считают, что сетчатыйПравило третей
Многие дизайнеры знакомы с этой сеткой из фотографии. Она делит область дизайна на трети как по горизонтали, так и по вертикали. На фотографии вы размещаете наиболее важные элементы в местах пересечения сетки.
На рисунке 5.4 показано, как можно применить правило третей.
Хотя эта сетка хорошо подходит для использования в графике, ее может быть сложнее реализовать в веб-дизайне, поскольку может быть трудно контролировать расположение пересечений.
Осторожно: Три одинаковые колонки могут быть очень скучными
Может возникнуть соблазн использовать правило третей для создания трехколоночного сайта с тремя равными колонками. Это плохо как потому, что это слишком жестко, так и потому, что на самом деле это не правило третей. Правило третей помогает разместить важное содержимое в дизайне на пересечении линий сетки. Но если вы размещаете содержимое в колонках между линиями сетки, это означает, что никакого содержимого не будет на пересечении.
Попробуйте сами: Используйте правило третей для создания простого макета
Использование правила третей поможет вам создать динамичный двухколоночный макет, который не будет скучным и разместит содержимое на одном из перекрестков. В этом задании "Попробуй сам" вы создадите макет своего дизайна либо на бумаге, либо в графической программе.
1. Откройте графический редактор или достаньте лист бумаги.
2. Нарисуйте прямоугольник, изображающий окно веб-браузера.
3. Разделите прямоугольник на трети по вертикали. Помните, что это макет, он не должен быть идеальным.
4. Затем разделите прямоугольник на трети по горизонтали.
5. Снова разделите первый ряд на трети. У вас должен получиться рисунок, похожий на Рисунок 5.5
6. Добавьте такие элементы, как логотип, заголовки и блоки контента, как показано на рисунке 5.6.
Вы можете сделать то же самое с колонками, чтобы создать еще больше вариантов компоновки. Это создает макет дизайна, который использует правило третей, но не является скучным, поскольку колонки не равны по размеру. А поскольку основной блок контента занимает две колонки, контент располагается прямо на пересечении сетки, что делает его визуальным центром внимания.
Золотое сечение
Одна из причин, по которой правило третей хорошо работает, заключается в том, что оно приближается к соотношению, которое встречается в природе: золотому сечению. Это соотношение использовалось в дизайне с греческих и римских времен, а пропорции были найдены в естественных вещах, таких как расположение стеблей и ветвей на растении и прожилки на листьях. Возможно, именно потому, что это соотношение встречается в природе, люди находят его эстетически приятным в наших проектах.
Примечание: Правило третей близко к золотому сечению 
Причина, по которой дизайн с двумя колонками, описанный в предыдущем разделе, работает эстетически, заключается в том, что соотношение 1/3 и 2/3 для колонок достаточно близко к phi (φ), чтобы предложить его с эстетической точки зрения. При работе над веб-дизайном, если вы не можете получить точное соотношение phi для ваших колонок, использование правила третей в этом случае является хорошей альтернативой.
Это соотношение - иррациональное число, phi (φ), и для наших целей его можно упростить до 1,62. Вы можете использовать его, чтобы разделить линию на две части, разделив общую длину на phi (1,62). Например, если у вас есть линия шириной 1000 пикселей, вы можете разделить ее на два участка, как показано на рисунке 5.7.
Чтобы использовать золотое сечение в веб-дизайне, вы должны рассматривать линию как ширину вашего дизайна и разделить ее на колонки с помощью phi. Вы можете добавить колонки внутри начальных колонок, используя то же соотношение.
Система сеток Bootstrap
Bootstrap включает в себя адаптивную к мобильным устройствам систему сетки, которая может иметь до 12 колонок в дизайне. При этом колонки реагируют на ширину устройства и масштабируются вверх и вниз соответствующим образом. Для определения элементов сетки используются простые и понятные классы CSS. И вы можете использовать миксины Less, чтобы настроить сетки в соответствии с потребностями вашего сайта. Подробнее об этом в Часе 23, "Использование Less и Sass в Bootstrap".
Bootstrap по умолчанию определяет четыре размера медиа-запросов (с тремя точками разрыва):
Очень маленькие устройства шириной менее 768px, такие как маленькие телефоны
Маленькие устройства шириной более 768px, например, планшеты
Средние устройства шириной более 992px, например, небольшие настольные мониторы
Большие устройства шириной более 1200px, например, большие настольные мониторы.
Существует ряд параметров сетки по умолчанию, которые Bootstrap изменяет в зависимости от устройства, просматривающего сетку. Таблица 5.1 объясняет эти параметры.
Как создавать сетки в Bootstrap
Сетки создаются в Bootstrap с помощью классов CSS на элементах содержимого HTML. Вы просто пишете HTML и добавляете соответствующие классы, чтобы поместить содержимое в сетку.
Создание базовой сетки
Первое, что вам нужно, это контейнер, в котором будут храниться элементы сетки. У вас есть два варианта контейнеров: фиксированная ширина и плавающая ширина. Оба они адаптивны.
Чтобы создать адаптивный макет фиксированной ширины, используйте класс .container. В листинге 5.1 показан <div> в качестве контейнера.
<div class="container">
<!-- rows go here -->
</div>
Класс .container-fluid создаст макет с плавающей шириной, равной ширине области просмотра. Листинг 5.2 демонстрирует это.
<div class="container-fluid">
<!-- rows go here -->
</div>
Note: Use the Classes on Nearly Any HTML Element
Классы сетки можно использовать в любом элементе HTML на уровне блока, но лучше всего использовать их в элементах, которые обычно используются в качестве контейнеров, таких как <div> или элементы-контейнеры HTML5, такие как <article>, <section>, <aside> или <nav>.
После того, как у вас есть элемент контейнера для окружения всей сетки, вам нужно установить ряды для создания горизонтальных групп столбцов. В листинге 5.3 показано, как использовать класс .row.
div class="container">
<div class="row">
<!-- row contents goes here -->
</div>
</div>
Последнее, что нужно сделать, это создать колонки содержимого. Используйте префиксы классов из таблицы 5.1, чтобы определить разные колонки для разных устройств. За каждым префиксом класса следует число. Это количество колонок, которые должна охватывать колонка. Например:
.col-md-5 охватывает 5 колонок. В ряду может быть до 2 таких колонок, при этом 2 колонки остаются.
Чтобы настроить разные сетки для устройств разного размера, просто используйте несколько классов для элементов колонок. Если столбцов больше 12, они будут автоматически переходить на следующую строку. Например, эта колонка будет иметь ширину 12 на сверхмалых устройствах, 6 на малых устройствах и 4 на средних и больших устройствах.
<article class="col-xs-12 col-sm-6 col-md-4">
Note: Extra Small Defaults to Spanning 12 Columns
В примере <article class="col-xs-12 col-sm-6 col-md-4"> я включил класс .col-xs-12, но на самом деле это не требуется, поскольку сверхмалые устройства по умолчанию используют всю ширину области просмотра, если не указано иное.
В предыдущем примере я не определил класс .col-lg-. Это связано с тем, что Bootstrap установит стили для каждой ширины устройства для каждого устройства такой ширины или больше. Поэтому, если я хочу, чтобы элемент занимал четыре колонки на средних и больших устройствах, мне нужно задать только класс medium. Если позже я решу, что хочу, чтобы элемент занимал семь колонок на больших устройствах, мне нужно будет добавить класс .col-lg-7.
Вам не нужно беспокоиться о расстоянии между колонками или ширине отступа между ними. Bootstrap позаботится обо всем этом за вас.
Отзывчивый сброс колонок
Одна из проблем, с которой вы можете столкнуться в некоторых дизайнах в определенных точках разрыва, заключается в том, что колонки не очищаются правильно, особенно если одна колонка выше других.
Чтобы исправить это, следует использовать класс .clearfix и классы утилиты responsive. Для этого можно использовать 16 классов, как показано в таблице 5.2.
Примечание: Что такое Clearfix?
Когда элемент плавающий, он удаляется из нормального потока, поэтому любой элемент, содержащий плавающий элемент, будет иметь высоту только неплавающего содержимого. Clearfix - это класс стиля CSS, который был создан для помощи плавающим колонкам, которые не регулируют высоту контейнера. В Bootstrap вы применяете класс .clearfix к элементу, следующему за плавающим элементом.
На рисунке 5.8 показана веб-страница, которая должна иметь одну строку и четыре колонки на маленьких устройствах и две строки и две колонки на сверхмалых устройствах. В листинге 5.5 показан HTML для нее. Как вы можете видеть, на сверхмалых устройствах она отображается не так, как нужно.
<div class="container">
<div class="row">
<div class="col-xs-6 col-sm-3">This is a super long column
that might not load correctly in all browsers</div>
<div class="col-xs-6 col-sm-3">short column</div>
<div class="col-xs-6 col-sm-3">short column</div>
<div class="col-xs-6 col-sm-3">short column</div>
</div>
</div>
Добавив блок, который отображается только на сверхмалых устройствах, вы можете гарантировать, что колонки будут отображаться так, как вы запланировали. В листинге 5.6 показан этот блок, добавленный в код.
<div class="container">
<div class="row">
<div class="col-xs-6 col-sm-3">This is a super long column
that might not load correctly in all browsers</div>
<div class="col-xs-6 col-sm-3">short column</div>
<div class="clearfix visible-xs-block"></div>
<div class="col-xs-6 col-sm-3">short column</div>
<div class="col-xs-6 col-sm-3">short column</div>
</div>
</div>
Блок clearfix будет отображаться только на сверхмалых устройствах, где плавание является неправильным.
Смещение, упорядочивание и вложенность столбцов
Вы не ограничены столбцами, начинающимися в первом столбце строки. Вы можете перемещать колонки, используя классы смещения. Эти классы имеют формат .col-size-offset-#, где размер - это xs, sm, md или lg, а число (#) - это количество столбцов, на которое нужно переместить элемент. Например, элементу с классом .col-md-offset-4 будет задан отступ в четыре столбца слева, чтобы переместить его на четыре столбца вправо.
На рисунке 5.9 показано, как это может выглядеть.
Вы также можете изменить порядок колонок. Это может быть полезно для оптимизации поисковых систем (SEO). Вы можете разместить наиболее важное содержимое первым, а затем изменить порядок колонок, чтобы разместить менее важные вещи первыми в дизайне. В листинге 5.7 показаны две колонки, которые перечислены в одном порядке, а на рисунке 5.10 показано, как они отображаются в другом.
<div class="container">
<div class="row">
<div class="col-md-8 col-md-push-4">The first column is eight
wide, pushed over four.</div>
<div class="col-md-4 col-md-pull-8">The second column is four
wide, pulled back eight.</div>
</div>
</div>
Вы упорядочиваете столбцы с помощью классов .col-size-push-# и .col-size-pull-#. Классы push перемещают колонки вправо, а классы pull перемещают колонки влево.
Вы также можете вложить ряды сетки в другие столбцы. Важно помнить, что при вложении ряда вы начинаете с 12 столбцов. Поэтому если вы вложите строку в колонку шириной 6 столбцов, вложенная строка будет иметь 12 более узких столбцов. В остальном вы создаете вложенные ряды так же, как и не вложенные.
Отзывчивые веб-макеты в Bootstrap
Одним из преимуществ Bootstrap является то, что он по умолчанию является адаптивным. Когда вы создаете макет сетки в Bootstrap, он автоматически становится адаптивным. Он будет автоматически складывать сетку на сверхмалых устройствах.
Но отзывчивый дизайн может делать больше, чем просто складывать сетку на сверхмалых устройствах.
Используя несколько классов для одних и тех же элементов, вы можете точно определить, сколько колонок должно быть в каждой точке разрыва устройства.
Каждый класс сетки имеет размер, связанный с ним (xs, sm, md и lg). Поэтому, если вы хотите изменить сетку в каждой из точек останова, определите эти столбцы как отдельные классы.
Например, вы можете создать дизайн со стеками для маленьких устройств, двумя колонками для маленьких устройств, тремя колонками для средних устройств и четырьмя колонками с некоторым смещением для больших устройств. Это можно сделать с помощью HTML в листинге 
<div class="container">
<div class="row">
<div class="col-sm-6 col-md-4 col-lg-3 col-lg-offset-
1">Column
one</div>
<div class="col-sm-6 col-md-4 col-lg-3 col-lg-offset-
1">Column
two</div>
<div class="col-sm-6 col-md-4 col-lg-3 col-lg-offset-
1">Column
three</div>
</div>
</div>


Час 6. Labels, Badges, Panels, Wells и Jumbotron
Что вы узнаете в этом часе:
Как добавлять дополнительную информацию к элементам с помощью меток и значков
Как упаковать содержимое в колодцы и панели
Как отобразить специальный контент на Jumbotron
В Bootstrap есть множество способов настроить внешний вид вашего сайта. А ярлыки, значки, панели, колодцы и Jumbotron дают вам конкретные инструменты для оформления различных разделов ваших веб-страниц. Все это - компоненты Bootstrap, позволяющие придать вашему сайту больше возможностей.
Ярлыки и значки
Ярлыки и значки - это способ добавить дополнительную информацию к элементу.
Хотя вы можете подумать о ярлыках в связи с формами, вы можете поместить ярлык практически на все. А значки - это скорее иконографическая метка для отображения индикатора или счетчика.
Ярлыки
Ярлыки обычно представляют собой встроенный элемент внутри другого элемента, который добавляет информацию об этом элементе. На рисунке 6.1 показан пример заголовка с меткой.
Чтобы добавить метку к содержимому, добавьте класс .label к элементу <span>, окружающему текст, который вы хотите использовать в метке. Затем необходимо определить разновидность метки, которую вы хотите использовать. Варианты могут быть следующими
.label-default
.label-primary
.label-success
.label-info
.label-warning
.label-danger
Внимание: Не забудьте оба класса этикеток Чтобы добавить этикетку к содержимому, необходимо включить классы .label и .label-variation. Если вы не включите вариацию, метка не будет отображаться правильно.
Вариации этикеток изменяют цвет этикеток. На рисунке 6.2 показаны цвета для различных вариантов этикеток.

























